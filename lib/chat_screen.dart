import 'package:flutter/material.dart';
import 'package:nest_mobile/photo_gallery_screen.dart';

class ChatScreen extends StatelessWidget {
  final String chatTitle;
  final String avatar;

  const ChatScreen({super.key, required this.chatTitle, required this.avatar});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        leading: IconButton(
          icon: const Icon(Icons.arrow_back),
          onPressed: () {
            Navigator.pop(context); // Quay l·∫°i m√†n h√¨nh tr∆∞·ªõc
          },
        ),
        title: Row(
          children: [
            CircleAvatar(
              backgroundImage: AssetImage(avatar),
              radius: 20,
            ),
            const SizedBox(width: 8),
            Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Text(chatTitle, style: const TextStyle(fontWeight: FontWeight.bold)),
                const Text(
                  'ƒêang ho·∫°t ƒë·ªông üîµ', // Hi·ªÉn th·ªã tr·∫°ng th√°i online
                  style: TextStyle(fontSize: 12, color: Colors.grey),
                ),
              ],
            ),
          ],
        ),
        actions: [
          IconButton(icon: const Icon(Icons.location_on), onPressed: () {}),
          IconButton(
            icon: const Icon(Icons.more_vert),
            onPressed: () {
              // M·ªü kho ·∫£nh khi nh·∫•n n√∫t 3 ch·∫•m
              Navigator.push(
                context,
                MaterialPageRoute(builder: (context) => PhotoGalleryScreen(chatTitle: chatTitle, avatar: avatar)),
              );
            },
          ),
        ],
      ),
      body: Column(
        children: [
          Expanded(
            child: ListView(
              padding: const EdgeInsets.all(16),
              children: [
                chatBubble('Con g√°i c·ªßa m·∫π kh·ªèe kh√¥ng?', false, avatar),
                chatBubble('D·∫° kh·ªèe, c√≤n m·∫π', true, ''),
                chatBubble('M·∫π kh·ªèe', false, avatar),
                chatBubble('H·∫πn con sau nh√©', false, avatar),
                const Center(
                  child: Padding(
                    padding: EdgeInsets.symmetric(vertical: 10),
                    child: Text(
                      '24 / 05 / 2024',
                      style: TextStyle(color: Colors.grey, fontSize: 12),
                    ),
                  ),
                ),
                chatBubble('T·ªëi nay con ƒëi ch∆°i v·ªõi b·∫°n nha m·∫π', true, ''),
                chatBubble('·ª™m con', false, avatar),
                chatBubble('Nh·ªõ v·ªÅ s·ªõm!', false, avatar),
                chatBubble('M·∫π ∆°i', true, ''),
                chatBubble('Cho con xi·ªÅn ƒëi ch∆°i', true, ''),
              ],
            ),
          ),

          // Thanh nh·∫≠p tin nh·∫Øn
          Padding(
            padding: const EdgeInsets.all(8.0),
            child: Row(
              children: [
                Expanded(
                  child: TextField(
                    decoration: InputDecoration(
                      hintText: 'G·ª≠i tin nh·∫Øn...',
                      border: OutlineInputBorder(
                        borderRadius: BorderRadius.circular(20),
                        borderSide: BorderSide.none,
                      ),
                      filled: true,
                      fillColor: Colors.grey[200],
                    ),
                  ),
                ),
                const SizedBox(width: 8),
                IconButton(
                  icon: const Icon(Icons.send, color: Colors.blue),
                  onPressed: () {
                    // X·ª≠ l√Ω g·ª≠i tin nh·∫Øn
                  },
                ),
              ],
            ),
          ),
        ],
      ),
    );
  }

  // Widget tin nh·∫Øn (chat bubble)
  Widget chatBubble(String message, bool isSender, String avatar) {
    return Row(
      crossAxisAlignment: CrossAxisAlignment.start,
      mainAxisAlignment: isSender ? MainAxisAlignment.end : MainAxisAlignment.start,
      children: [
        if (!isSender && avatar.isNotEmpty) // N·∫øu l√† tin nh·∫Øn c·ªßa ng∆∞·ªùi kia, hi·ªÉn th·ªã avatar
          Padding(
            padding: const EdgeInsets.only(right: 8),
            child: CircleAvatar(
              backgroundImage: AssetImage(avatar),
              radius: 20,
            ),
          ),
        Container(
          margin: const EdgeInsets.symmetric(vertical: 4),
          padding: const EdgeInsets.all(12),
          constraints: const BoxConstraints(maxWidth: 250),
          decoration: BoxDecoration(
            color: isSender ? Colors.blue : Colors.grey[200],
            borderRadius: BorderRadius.only(
              topLeft: const Radius.circular(12),
              topRight: const Radius.circular(12),
              bottomLeft: isSender ? const Radius.circular(12) : Radius.zero,
              bottomRight: isSender ? Radius.zero : const Radius.circular(12),
            ),
          ),
          child: Text(
            message,
            style: TextStyle(color: isSender ? Colors.white : Colors.black),
          ),
        ),
      ],
    );
  }
}
